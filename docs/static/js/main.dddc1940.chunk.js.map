{"version":3,"sources":["database/getDatabase.js","constants.js","models/orm.js","models/User.js","auth/identity.js","components/Loading.jsx","components/MobilishView.jsx","views/SelectAQuarry.js","util/searchPhrase.js","models/Quarry.js","views/NewQuarry.js","externalApis/spotify.js","views/ConnectSpotify.jsx","views/QuarryFromUrl.jsx","contexts/SpotifyPlayerContext.jsx","routines/moneyReplenish.js","components/TrackPreview.jsx","components/SongQueueListItem.jsx","components/SongQueue.jsx","components/QuarrySharing.jsx","components/Player/playerStateCheck.jsx","components/ConfirmSongSelection.jsx","components/SongSelector.jsx","components/Player/Player.jsx","components/Player/index.jsx","views/Soup.jsx","App.js","index.js"],"names":["db","getDatabase","getFirestore","process","NODE_ENV","constants","APP_NAME","BASE_URI","REACT_APP_BASE_URI","SPOTIFY_API","SPOTIFY_ACCOUNTS_API","SPOTIFY_CLIENT_ID","SPOTIFY_SCOPES","MONEY_SINGULAR","MONEY_PLURAL","MAX_MONEY","SPOTIFY_REDIRECT_URI","module","exports","debug","localStorage","getItem","args","console","log","stack","Error","group","label","groupEnd","ORM","connection","_dbconnection","name","schema","_models","model","Model","getdbFn","this","_schema","_collection","_getdb","_hooks","preCreate","hook","document","Object","entries","key","value","keys","join","Array","isArray","a","fetchDoc","validate","addDoc","collection","snapshot","findById","id","cache","queryObj","_id","ref","q","query","convertObjectToWhereClauses","getDocs","docs","length","undefined","doc","find","documentSnapshotToObject","map","docRef","getDoc","getDocFromServer","findOne","create","updateObj","updates","updateDoc","update","push","obj","clauses","where","data","UserSchema","money","Number","score","displayName","String","User","user","useUser","useState","setUser","useEffect","findOrCreate","then","setItem","Loading","ui","setUi","setTimeout","MobilishView","props","children","style","width","midWidth","align","textAlign","className","SelectAQuarry","navigate","useNavigate","type","placeholder","onClick","SHORT_ADJECTIVES","SHORT_NOUNS","twoWordPhrase","Math","floor","random","QuarrySchema","leader","queue","phrase","created","currentTrack","startedAt","isPlaying","Boolean","duration","Quarry","quarry","Date","NewQuarry","setPhrase","validated","setValidated","quarryName","setQuarryName","submitting","setSubmitting","handleSubmit","event","currentTarget","checkValidity","preventDefault","stopPropagation","Form","noValidate","onSubmit","action","Group","controlId","Label","Control","required","onChange","target","InputGroup","Text","FormControl","fontFamily","color","readOnly","aria-label","Button","variant","disabled","ACCESS_TOKEN","REFRESH_TOKEN","storage","val","spotify","axios","_createAxiosWithSpotifyAuth","baseURL","headers","accessToken","refreshToken","code","codeVerifier","params","URLSearchParams","append","ACCESS_TOKEN_URL","url","method","res","setAccessToken","access_token","setRefreshToken","refresh_token","response","error","message","requestAccessTokenFromRefreshToken","request","grant_type","client_id","test","alert","window","location","href","CODE_VERIFIER","pkceChallenge","code_verifier","code_challenge","authParams","AUTH_URL","toString","ConnectSpotify","useLocation","searchParams","search","get","setTokensWithCode","catch","e","useParams","require","QuarryFromUrl","setQuarry","SpotifyPlayerContext","createContext","track","startFrom","updateSpotify","LAST_UPDATE","INTERVAL","loopId","stopMoneyLoop","clearTimeout","warn","TrackPreview","margin","src","album","images","alt","explicit","Badge","bg","artists","SongQueueListItem","votes","onVote","SongQueue","songs","onVoteHandler","Card","s","Title","QuarrySharing","Accordion","defaultActiveKey","Item","eventKey","Header","Body","replace","playerCheckId","ConfirmSongSelection","show","handler","Modal","Footer","pill","SongSelector","soupId","eventHandler","setQuery","tracks","setTracks","showConfirm","setShowConfirm","selectedTrack","setSelectedTrack","submittingSong","setSubmittingSong","doSearch","limit","items","handleSelected","handleConfirmation","isConfirmed","userDoc","updatedMoney","soup","updateQueue","toLowerCase","finally","renderTrack","time","Time","duration_ms","ListGroup","popularity","size","getLastTrackPlayed","recentlyPlayed","checkPlayerForTrackEnd","onEnd","onResume","trackUri","playerState","lastPlayed","uri","is_playing","clearInterval","TRACK_END","_requestSpotifyPlayTrack","uris","offsetMs","currentUri","status","item","Player","updateConnectedSoup","Consumer","values","playTrack","setInterval","Soup","quarryId","errorCode","setErrorCode","updating","setUpdating","playerValues","setPlayerValues","playerLock","setPlayerLock","selectedTab","setSelectedTab","myId","QuarryModel","loop","lastUpdate","now","moneyToGive","adjustedMoney","startMoneyLoop","songSelectorEvent","includes","o","sortBy","reverse","userMoneyStat","startButtonDisabled","Provider","OverlayTrigger","placement","delay","overlay","Tooltip","info","nextTrack","pop","startAt","Tabs","activeKey","onSelect","Tab","title","justifyContent","App","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","path","element","appConfig","app","ReactDOM","getElementById"],"mappings":"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,2CAC1D,uBACA,uBACA,qCAAO,wBAAQC,QAAS,kBAAMJ,EAAS,cAAhC,+B,6CCrBbK,EAAmB,CACvB,UACA,OACA,MACA,MACA,OACA,OACA,UACA,MACA,UACA,OACA,OACA,QACA,MACA,MACA,OACA,OACA,SACA,OACA,QACA,QACA,MACA,QACA,OACA,SACA,QACA,OACA,OACA,OACA,QACA,QACA,QACA,SACA,OACA,QACA,SACA,UAGIC,EAAc,CAClB,QACA,MACA,MACA,QACA,MACA,OACA,MACA,QACA,OACA,SACA,MACA,MACA,UACA,MACA,QACA,SACA,OACA,SACA,MACA,QACA,OACA,QACA,MACA,OACA,MACA,OACA,MACA,MACA,QACA,OACA,SACA,QACA,OACA,OACA,MACA,MACA,OACA,MACA,MACA,QACA,MACA,MACA,OAGa,SAASC,IACtB,MAAO,CACLF,EAAiBG,KAAKC,MAAMD,KAAKE,SAAWL,EAAiBtD,SAC7DuD,EAAYE,KAAKC,MAAMD,KAAKE,SAAWJ,EAAYvD,UCtFvD,IAAM4D,EAAe,CACnBC,OAAQpC,OACRhE,KAAMgE,OACNqC,MAAO,GACPC,OAAQtC,OACRuC,QAASzF,OACT0F,aAAc1F,OACd2F,UAAW3F,OACX4F,UAAWC,QACXC,SAAU/C,QAGNgD,EAAShH,EAAIM,MAAM,SAAUgG,GACnCU,EAAOlG,WAAU,SAACmG,GAChBA,EAAOT,MAAQ,GACfS,EAAOP,QAAU,IAAIQ,QAGRF,QCVA,SAASG,EAAUjC,GAEhC,IAAMS,EAAWC,cACXvB,EAAOC,IAH0B,EAKXC,mBAAS2B,KALE,mBAKhCO,EALgC,KAKxBW,EALwB,OAML7C,oBAAS,GANJ,mBAMhC8C,EANgC,KAMrBC,EANqB,OAOH/C,mBAAS,IAPN,mBAOhCgD,EAPgC,KAOpBC,EAPoB,OAQHjD,oBAAS,GARN,mBAQhCkD,EARgC,KAQpBC,EARoB,KAcjCC,EAAe,SAACC,GAEpB,IAA6B,IADhBA,EAAMC,cACVC,gBAGP,OAFAF,EAAMG,sBACNH,EAAMI,kBAGRV,GAAa,GAGRC,IAGLG,GAAc,GAGdV,EAAO5D,O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","file":"static/js/main.dddc1940.chunk.js","sourcesContent":["import {getFirestore} from \"firebase/firestore\";\n\nif (process.NODE_ENV === 'development') {\n  // const db = getFirestore();\n}\n\nlet db;\n\nexport default function getDatabase() {\n  if (db) {\n    return db;\n  }\n  db = getFirestore();\n  return db;\n}\n\n","\nconst constants =  {\n  APP_NAME: 'JukeSoup',\n  BASE_URI: process.env.REACT_APP_BASE_URI || 'http://localhost:3000',\n  SPOTIFY_API: 'https://api.spotify.com/v1',\n  SPOTIFY_ACCOUNTS_API: 'https://accounts.spotify.com',\n  SPOTIFY_CLIENT_ID: process.env.REACT_APP_CLIENT_ID,\n  SPOTIFY_SCOPES: [\n    'user-read-playback-state',\n    'user-modify-playback-state',\n    'user-read-currently-playing',\n    'user-read-recently-played'\n  ],\n  MONEY_SINGULAR: 'ticket',\n  MONEY_PLURAL: 'tickets',\n  MAX_MONEY: 20\n}\nconstants.SPOTIFY_REDIRECT_URI = `${constants.BASE_URI}/callback`;\n\nmodule.exports = constants;\n","import { collection, addDoc, query, where, updateDoc, getDocs, getDoc, getDocFromServer, doc } from \"firebase/firestore\";\nimport find from 'lodash.find';\nimport getDatabase from '../database/getDatabase';\n\nconst debug = (...args) => {\n  if (localStorage.getItem('ORMDEBUG')) {\n    console.log('[ORM:DEBUG]', ...args, {stack: new Error()});\n  }\n}\ndebug.group = (label) => false && console.group(label);\ndebug.groupEnd = () => false && console.groupEnd();\n\nexport class ORM {\n\n  static _models = {}\n  static _dbconnection = getDatabase;\n\n  /**\n   * @param {Function} connection - the firestore connection function\n   */\n  static setDb(connection) {\n    debug('Setting db connection to', connection);\n    ORM._dbconnection = connection;\n  }\n\n  static model(name, schema) {\n\n    if (!schema) {\n      return ORM._models[name];\n    }\n    const model = new Model(name, schema, ORM._dbconnection);\n    ORM._models[name] = model;\n    return model;\n  }\n}\n\nclass Model {\n  constructor(name, schema, getdbFn) {\n    this._schema = schema;\n    this._collection = name;\n    this._getdb = getdbFn;\n    this._hooks = {\n      preCreate: () => {},\n    }\n  }\n\n  // hooks\n  preCreate(hook) {\n    this._hooks.preCreate = hook;\n  }\n\n  /**\n   * Very primitive validation\n   * @param {object} document\n   * @returns {*}\n   */\n  validate(document) {\n    const documentEntries = Object.entries(document);\n    for (const [key, value] of documentEntries) {\n      if (key === '_id') {\n        continue;\n      }\n      console.log(key, this._schema[key]);\n      if (!this._schema[key]) {\n        throw Error(`document has extra property '${key}'\n        Schema keys are ${Object.keys(this._schema).join(', ')}`);\n      }\n      if (Array.isArray(this._schema[key])) {\n        // TODO: validate the type inside the array schema with items in the document array\n        if (!Array.isArray(value)) {\n          throw Error(`Expected ${key} to be an Array but was ${typeof value}`);\n        }\n      } else if (typeof this._schema[key]() !== typeof value) {\n        throw Error(`Expected '${key}' to be type ${typeof this._schema[key]()}, but was ${typeof value}\n        Schema keys are ${Object.keys(this._schema).join(', ')}`);\n      }\n    }\n    return document;\n  }\n\n  async create(document = {}, {fetchDoc = true} = {}) {\n    debug('creating document ', document);\n    this._hooks.preCreate(document);\n    this.validate(document);\n    const db = this._getdb();\n    const snapshot = await addDoc(collection(db, this._collection), document);\n    if (fetchDoc) {\n      debug('fetching document');\n      return this.findById(snapshot.id, {cache: false});\n    }\n    return snapshot;\n  }\n\n  /**\n   * @param {object} queryObj - simplified AND'ed obect or sql like string\n   * @params {{document: boolean}} - if you want the actual document or snapshopt (for more firestore ops)\n   * @returns {Promise<void>}\n   */\n  async find(queryObj, {document = true} = {}) {\n    debug.group('find');\n    debug('called with query', queryObj);\n    let _id;\n    if (queryObj._id) {\n      _id = queryObj._id;\n      delete queryObj._id;\n    }\n    const db = this._getdb();\n    debug('using db', db);\n    const ref = collection(db, this._collection);\n    debug('using collection', ref);\n    const q = query(ref, ...convertObjectToWhereClauses(queryObj));\n    const snapshot = await getDocs(q);\n    if (!snapshot.docs?.length) {\n      debug('find: no query found');\n      debug.groupEnd();\n      return undefined;\n    }\n    if (_id) {\n      const doc = find(snapshot.docs, (doc) => doc.id === _id);\n      debug('found doc (by id): ', doc);\n      debug.groupEnd();\n      return document ? [documentSnapshotToObject(doc)] : [doc];\n    }\n    debug('found docs (as snapshots):', snapshot.docs);\n    debug.groupEnd();\n    return document ? snapshot.docs.map(documentSnapshotToObject) : snapshot.docs;\n  }\n\n  async findOne(queryObj, {document = true} = {}) {\n    debug.group('findOne');\n    const docs = await this.find(queryObj, {document});\n    if (!docs) {\n      debug('no docs found');\n      debug.groupEnd();\n      return;\n    }\n    debug(`fond ${docs.length} docs, first one is `, docs[0]);\n    debug.groupEnd();\n    return docs[0];\n  }\n  async findById(id, { cache = true, document = true} = {}) {\n    debug.group('findById');\n    debug('using id ', id, {cache}, this._collection);\n    const db = this._getdb();\n    const docRef = doc(db, `/${this._collection}/${id}`);\n    const snapshot = await (cache ? getDoc(docRef) : getDocFromServer(docRef));\n    debug.groupEnd();\n    if (!document) {\n      debug('returning snapshot rather than document');\n      return document;\n    }\n    return documentSnapshotToObject(snapshot);\n  }\n\n  async findOrCreate(queryObj) {\n    debug.group('findOrCreate');\n    debug('called with queryObj =', queryObj);\n    const doc = await this.findOne(queryObj);\n    if (!doc) {\n      if (!queryObj._id) {\n        delete queryObj._id;\n      }\n      debug('doc not found, creating.');\n      const doc = await this.create(queryObj);\n      debug.groupEnd();\n      return doc;\n    }\n    debug('Found doc:', doc);\n    debug.groupEnd();\n    return doc;\n  }\n\n  async update(queryObj, updateObj) {\n    debug.group('update');\n    const document = await this.findOne(queryObj);\n    if (!document) {\n      debug('Could not find doc!');\n      debug.groupEnd();\n      return null;\n    }\n    const db = this._getdb();\n    const docRef = doc(db, `/${this._collection}/${document._id}`);\n    debug.groupEnd();\n    let updates = [];\n    for (const [key, value] of Object.entries(updateObj)) {\n      const update = await updateDoc(docRef, key, value);\n      updates.push(update);\n    }\n    return updates;\n  }\n}\n\n/**\n * @param obj - queryObject\n * @returns {*[]} clauses\n */\nfunction convertObjectToWhereClauses(obj) {\n  const clauses = [];\n  for (const [key, value] of Object.entries(obj)) {\n    clauses.push(where(key, '==', value));\n  }\n  return clauses;\n}\n\n/** takes a DocumentSnapshot https://firebase.google.com/docs/reference/js/firestore_lite.documentsnapshot.md\n * and adds the id to the document as _id (like with mongoose)\n * @param snapshot\n */\nfunction documentSnapshotToObject(snapshot) {\n  const data = snapshot?.data();\n  if (!data) {\n    return;\n  }\n  return { ...snapshot.data(), _id: snapshot.id };\n}\n","import { ORM } from './orm';\nimport { MAX_MONEY } from '../constants';\n\nconst UserSchema = {\n  money: Number,\n  score: Number,\n  displayName: String\n}\n\nconst User = ORM.model('User', UserSchema);\nUser.preCreate((user) => {\n  user.score = user.score || 0;\n  user.money = user.money ?? MAX_MONEY;\n});\n\nexport default User;\n","import { useState, useEffect } from 'react';\nimport User from '../models/User';\n\nexport default function useUser() {\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const _id = localStorage.getItem('_id');\n    User.findOrCreate({_id})\n      .then(user => {\n        localStorage.setItem('_id', user._id);\n        setUser(_id);\n      })\n  });\n\n  return user;\n}\n\nexport function getCurrentUserId() {\n  return localStorage.getItem('_id');\n}\n","import {useState} from 'react';\n\nexport default function Loading() {\n\n    const [ui, setUi] = useState('');\n\n    setTimeout(() => setUi(<div>Loading</div>), 1200);\n\n    return <>{ui}</>\n}\n","\n/** Simple container that restricts the width to a bit more than mobile. Most\n * (if not all) views should be wrapped in this.\n */\nexport function MobilishView(props) {\n  const { children } = props;\n  const style = {width: '520px', midWidth: '200px'};\n  if (props.align) {\n    style.textAlign = props.align;\n  }\n  return <div className='mobilish' style={style}>{children}</div>\n}\n","// import '../style/input.css';\nimport { useNavigate } from \"react-router-dom\";\n\nimport useUser from \"../auth/identity\";\nimport Loading from \"../components/Loading\";\nimport {MobilishView} from \"../components/MobilishView\";\n\nfunction SelectAQuarry(props) {\n    const navigate = useNavigate();\n    const user = useUser();\n    if (user === null) {\n      return <Loading/>\n    }\n    return (\n        <MobilishView>\n            <h1>Find a Quarry</h1>\n            <input type=\"text\"\n                   className='input-center'\n                   placeholder='two words (e.g. \"shining-pearl\")'/> | <button>Enter</button>\n            <br/>\n            <hr/>\n            <h3>or <button onClick={() => navigate('/soup/new')}>create one</button></h3>\n        </MobilishView>\n    );\n}\n\nexport default SelectAQuarry\n","const SHORT_ADJECTIVES = [\n  'shining',\n  'cool',\n  'fun',\n  'rad',\n  'good',\n  'nice',\n  'helpful',\n  'hip',\n  'musical',\n  'kind',\n  'free',\n  'great',\n  'bad',\n  'hot',\n  'cold',\n  'warm',\n  'frozen',\n  'tall',\n  'short',\n  'quick',\n  'red',\n  'green',\n  'blue',\n  'square',\n  'smart',\n  'long',\n  'rich',\n  'calm',\n  'windy',\n  'round',\n  'solid',\n  'liquid',\n  'meta',\n  'cyber',\n  'swanky',\n  'fruity'\n];\n\nconst SHORT_NOUNS = [\n  'pearl',\n  'mom',\n  'dad',\n  'daddy',\n  'boy',\n  'girl',\n  'car',\n  'trick',\n  'mine',\n  'quarry',\n  'pot',\n  'egg',\n  'seltzer',\n  'gas',\n  'power',\n  'iphone',\n  'salt',\n  'pepper',\n  'bed',\n  'table',\n  'soda',\n  'chair',\n  'rug',\n  'bean',\n  'ice',\n  'yoyo',\n  'rug',\n  'can',\n  'wheel',\n  'yoga',\n  'button',\n  'stick',\n  'fire',\n  'rain',\n  'sun',\n  'god',\n  'gold',\n  'cup',\n  'app',\n  'bread',\n  'box',\n  'toy',\n  'tea'\n]\n\nexport default function twoWordPhrase() {\n  return [\n    SHORT_ADJECTIVES[Math.floor(Math.random() * SHORT_ADJECTIVES.length)],\n    SHORT_NOUNS[Math.floor(Math.random() * SHORT_NOUNS.length)]\n  ];\n}\n","import { ORM } from './orm';\n\nconst QuarrySchema = {\n  leader: String,\n  name: String,\n  queue: [],\n  phrase: String,\n  created: Object, // Date TODO date validation?\n  currentTrack: Object,\n  startedAt: Object, // Date\n  isPlaying: Boolean,\n  duration: Number\n}\n\nconst Quarry = ORM.model('Quarry', QuarrySchema);\nQuarry.preCreate((quarry) => {\n  quarry.queue = []\n  quarry.created = new Date();\n});\n\nexport default Quarry;\n","import { useState } from 'react';\nimport {Form, InputGroup, Button, FormControl} from 'react-bootstrap';\nimport { FiRefreshCw } from 'react-icons/fi'\nimport { useNavigate } from 'react-router-dom';\nimport Loading from \"../components/Loading\";\nimport useUser from '../auth/identity';\nimport {MobilishView} from \"../components/MobilishView\";\nimport twoWordPhrase from '../util/searchPhrase';\nimport Quarry from \"../models/Quarry\";\n\nexport default function NewQuarry(props) {\n\n  const navigate = useNavigate();\n  const user = useUser();\n\n  const [phrase, setPhrase] = useState(twoWordPhrase());\n  const [validated, setValidated] = useState(false);\n  const [quarryName, setQuarryName] = useState('');\n  const [submitting, setSubmitting] = useState(false);\n\n  const updateQuarryName = (event) => {\n    setQuarryName(event.target.value);\n  }\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n    setValidated(true);\n\n    // TODO this should be handled with form validation\n    if (!quarryName) {\n      return;\n    }\n    setSubmitting(true);\n\n    // TODO probably re-validate user exists before creating\n    Quarry.create({\n      leader: user,\n      phrase: phrase.join('-'),\n      name: quarryName\n    })\n      .then(data => {\n        console.log('new quarry', data);\n        navigate(`/soup/${data._id}`);\n      })\n  }\n\n  if (user === null) {\n    return <Loading/>\n  }\n\n  return (\n    <MobilishView>\n      <h1>Open a Quarry. Discover Music.</h1>\n      <Form noValidate validated={validated} onSubmit={handleSubmit} action=''>\n        <Form.Group controlId='name'>\n          <Form.Label>Quarry Name</Form.Label>\n          <Form.Control required type=\"input\" placeholder=\"(e.g. Nick's Soup)\" value={quarryName} onChange={updateQuarryName}/>\n        </Form.Group>\n        <br/>\n        <InputGroup style={{width: '480px'}}>\n          <InputGroup.Text>Your 2-word phrase:</InputGroup.Text>\n          <FormControl\n            style={{textAlign: 'center', fontFamily: 'monospace', color: 'red'}}\n            readOnly\n            value={phrase[0]}\n            aria-label=\"Recipient's username with two button addons\"\n          />\n          <FormControl\n            style={{textAlign: 'center', fontFamily: 'monospace', color: 'red'}}\n            readOnly\n            value={phrase[1]}\n            aria-label=\"Recipient's username with two button addons\"\n          />\n          <Button variant=\"outline-secondary\" onClick={() => setPhrase(twoWordPhrase())}><FiRefreshCw/></Button>\n        </InputGroup>\n        <Form.Text className=\"text-muted\">This is helps friends find you.</Form.Text>\n        <br/>\n        <Button className={submitting ? 'btn-secondary' : 'btn-success'}\n                type=''\n                onClick={handleSubmit}\n                disabled={submitting}> {!submitting ? 'Create' : 'working 💦'}</Button>\n      </Form>\n    </MobilishView>\n  )\n}\n","import axios from 'axios';\nimport {SPOTIFY_ACCOUNTS_API, SPOTIFY_API, SPOTIFY_CLIENT_ID, SPOTIFY_REDIRECT_URI} from '../constants';\n\nconst ACCESS_TOKEN = 'spotifyAccessToken_DO_NOT_SHARE';\nconst REFRESH_TOKEN = 'spotifyRefreshToken';\n\nclass Storage {\n  get accessToken() {\n    return localStorage.getItem(ACCESS_TOKEN);\n  }\n  set accessToken(val) {\n    localStorage.setItem(ACCESS_TOKEN, val);\n  }\n  get refreshToken() {\n    return localStorage.getItem(REFRESH_TOKEN);\n  }\n  set refreshToken(val) {\n    localStorage.setItem(REFRESH_TOKEN, val);\n  }\n}\n\nconst storage = new Storage();\n\nclass AxiosWithSpotifyAuth {\n  constructor() {\n    this.axios = this._createAxiosWithSpotifyAuth();\n  }\n  _createAxiosWithSpotifyAuth() {\n    return axios.create({\n      baseURL: SPOTIFY_API,\n      headers: {\n        'Authorization': `Bearer ${storage.accessToken}`\n      }\n    })\n  }\n  setAccessToken(accessToken) {\n    storage.accessToken = accessToken;\n    this.axios = this._createAxiosWithSpotifyAuth();\n  }\n  setRefreshToken(refreshToken) {\n    storage.refreshToken = refreshToken;\n    this.axios = this._createAxiosWithSpotifyAuth();\n  }\n\n  async setTokensWithCode(code, codeVerifier) {\n    const params = new URLSearchParams();\n    params.append('grant_type', 'authorization_code');\n    params.append('code', code);\n    params.append('redirect_uri', SPOTIFY_REDIRECT_URI);\n    params.append('client_id', SPOTIFY_CLIENT_ID);\n    params.append('code_verifier', codeVerifier);\n    const ACCESS_TOKEN_URL = `${SPOTIFY_ACCOUNTS_API}/api/token`;\n    const res = await axios({\n      url: ACCESS_TOKEN_URL,\n      method: 'post',\n      data: params,\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    });\n    this.setAccessToken(res.data.access_token);\n    this.setRefreshToken(res.data.refresh_token);\n    return res;\n  }\n\n  async request(...args) {\n    let res;\n    try {\n      res = await this.axios(...args);\n    } catch (e) {\n      if (e.response?.data.error.message === \"The access token expired\") {\n        console.log('access token expired, trying new token');\n        await this.requestAccessTokenFromRefreshToken();\n        return this.request(...args);\n      }\n    }\n    return res;\n  }\n\n  async requestAccessTokenFromRefreshToken() {\n    console.log('starting refresh flow')\n    const params = new URLSearchParams({\n      grant_type: 'refresh_token',\n      refresh_token: storage.refreshToken,\n      client_id: SPOTIFY_CLIENT_ID,\n    });\n    try {\n      const res = await axios({\n        url: `${SPOTIFY_ACCOUNTS_API}/api/token`,\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        data: params\n      });\n      storage.accessToken = res.data.access_token;\n      storage.refreshToken = res.data.refresh_token;\n      return res;\n    } catch(e) {\n      if (e.message === 'Request failed with status code 400' || /The access token expired/.test(e.message)) {\n        alert('Please reconnect Spotify');\n        window.location.href = '/spotifyConnect';\n      } else {\n        console.error('HANDLE THIS IN spotify.js');\n        console.log(e);\n        throw e;\n      }\n    }\n  }\n}\n\nconst spotify = new AxiosWithSpotifyAuth();\n\nexport default spotify;\n","import {APP_NAME} from '../constants';\nimport {Button} from 'react-bootstrap';\nimport {SPOTIFY_ACCOUNTS_API, SPOTIFY_CLIENT_ID, SPOTIFY_REDIRECT_URI, SPOTIFY_SCOPES} from '../constants';\nimport {useLocation, useNavigate} from 'react-router-dom';\nimport pkceChallenge from 'pkce-challenge';\n\nimport spotify from '../externalApis/spotify';\nimport Loading from \"../components/Loading\";\nimport {MobilishView} from \"../components/MobilishView\";\n\nconst CODE_VERIFIER = 'codeVerifier_DO_NOT_SHARE'\nconst { code_verifier, code_challenge } = pkceChallenge(48);\n\nconst authParams = new URLSearchParams();\nauthParams.append('client_id', SPOTIFY_CLIENT_ID);\nauthParams.append('response_type', 'code');\nauthParams.append('scope', SPOTIFY_SCOPES.join(' '));\nauthParams.append('redirect_uri', SPOTIFY_REDIRECT_URI);\nauthParams.append('code_challenge_method', 'S256');\nauthParams.append('code_challenge', code_challenge);\nconsole.log('using challenge ', code_challenge);\n\nconst AUTH_URL = `${SPOTIFY_ACCOUNTS_API}/authorize?${authParams.toString()}`;\n\nexport default function ConnectSpotify() {\n\n  const location = useLocation();\n  const navigate = useNavigate();\n  const searchParams = new URLSearchParams(location.search);\n  const code = searchParams.get('code');\n  const error = searchParams.get('error');\n\n  if (error) {\n    if (error === 'access_denied') {\n      return <h1>Oh.</h1>\n    }\n    return <>\n      <h1>Yikes.</h1>\n      <h6>Just walk away</h6>\n    </>\n  }\n\n  if (code) {\n    const code_verifier = localStorage.getItem(CODE_VERIFIER);\n\n    spotify.setTokensWithCode(code, code_verifier)\n      .then(data => {\n        console.log(data);\n        return spotify.axios('/me/player/currently-playing')\n      })\n      .then(() => navigate('/soup/new'))\n      .catch((e) => console.error(e.message))\n    return <Loading/>\n  }\n\n  localStorage.setItem(CODE_VERIFIER, code_verifier);\n\n  return <MobilishView align='center'>\n    <h1>Connect Your Spotify Account</h1>\n    <p>Let {APP_NAME} control your music player on Spotify. Connect an account you plan on playing loud and\n      proud.</p>\n    <br/>\n    <Button variant='outline-dark' href={AUTH_URL}>Authorize with Spotify</Button>\n    <br/>\n    <br/>\n    <br/>\n    <small>We don't modify any data, such as playlists or liked songs (or anything else)</small>\n  </MobilishView>\n}\n","import Loading from \"../components/Loading\";\nimport Quarry from \"../models/Quarry\";\nimport {useState} from \"react\";\nimport {useNavigate} from \"react-router-dom\";\n\nconst { useParams } = require('react-router-dom');\n\nexport default function QuarryFromUrl() {\n  const { phrase } = useParams();\n  const navigate = useNavigate();\n  if (!/^\\w{1,10}-\\w{1,10}$/.test(phrase)) {\n    navigate('/');\n  }\n  const [ quarry, setQuarry ] = useState(null);\n  console.log('its ', phrase);\n\n  Quarry.find({phrase})\n    .then(quarry => {\n      if (quarry?.length === 1) {\n        navigate(`/soup/${quarry[0]._id}`);\n      } else if (quarry?.length > 1 ) {\n        console.log('todo') // todo\n        setQuarry(quarry);\n      } else {\n        navigate('/');\n      }\n    })\n\n  if (quarry === null) {\n    return <Loading/>;\n  }\n\n  return <div>This is a list of soups (TODO)</div>\n\n}\n","import { createContext} from \"react\";\n\nexport const SpotifyPlayerContext = createContext({\n  track: null,\n  isPlaying: false,\n  startFrom: 0,\n  // when the objet is updated, this prop controls whether\n  // spotify should be updated (start playing a song) or not\n  // set to false when fetching already set data (Like on a page\n  // refresh)\n  updateSpotify: true,\n});\n","import User from '../models/User';\nimport { getCurrentUserId } from \"../auth/identity\";\nimport { MAX_MONEY } from '../constants';\n\nconst LAST_UPDATE = 'lastMoneyUpdate';\nconst INTERVAL = 3 * 60 * 1000;\nconst MONEY_PER_INTERVAL = 3;\n\nlet loopId = null;\n\nexport function startMoneyLoop() {\n  const loop = async () => {\n    const lastUpdate = +localStorage.getItem(LAST_UPDATE);\n    const now = Date.now();\n    if (lastUpdate + INTERVAL < now) {\n      const moneyToGive = Math.floor((now - lastUpdate) / INTERVAL) * MONEY_PER_INTERVAL;\n      const _id = getCurrentUserId();\n      const user = await User.findById(_id);\n      const adjustedMoney = user.money + moneyToGive < MAX_MONEY ? user.money + moneyToGive : MAX_MONEY;\n      await User.update({_id}, {money: adjustedMoney});\n      localStorage.setItem(LAST_UPDATE, Date.now());\n      loopId = setTimeout(loop, INTERVAL);\n    }\n    else {\n      loopId = setTimeout(loop, lastUpdate + INTERVAL - now);\n      return loopId;\n    }\n  }\n  if (loopId !== null) {\n    console.error('startMoneyLoop - cannot start loop when already running');\n    return;\n  }\n  return loop();\n}\n\nexport function stopMoneyLoop () {\n  if (loopId === null) {\n    console.warn('stopMoneyLoop - nothing to stop');\n    return;\n  }\n  clearTimeout(loopId);\n  loopId = null;\n}\n","import {Badge} from \"react-bootstrap\";\n\n\nexport default function TrackPreview({track}) {\n  if (!track) {\n    return null;\n  }\n  return <div className='d-flex'>\n    <div style={{margin: '16px'}}>\n        <img\n            src={track.album.images[2].url}\n            alt='Track album'\n          />\n    </div>\n    <div style={{margin: '16px'}}>\n      <div className='fw-bold'>{track.name} {track.explicit && <Badge bg='secondary'>Explicit</Badge>}&nbsp;</div>\n      <div>{track.artists.map(a => a.name).join(', ')}</div>\n    </div>\n  </div>\n}\n","import { AiOutlineDown, AiOutlineUp } from 'react-icons/ai'\nimport TrackPreview from \"./TrackPreview\";\nimport '../style/songListQueueItem.css'\n\n\nexport default function SongQueueListItem ({ votes, track, onVote }) {\n\n  return <div className='container'>\n    <div className='voteWindow'>\n      <div className='clickable' onClick={() => onVote('up', {track})}><AiOutlineUp/></div>\n      <div><h3>{votes}</h3></div>\n      <div className='clickable' onClick={() => onVote('down', {track})}><AiOutlineDown/></div>\n    </div>\n    <div>\n      <TrackPreview track={track}/>\n    </div>\n  </div>\n\n}\n","import {Card} from \"react-bootstrap\";\nimport {FiMusic} from 'react-icons/fi';\nimport SongQueueListItem from './SongQueueListItem';\n\nexport default function SongQueue (props) {\n  const { songs, onVote } = props;\n\n  if (!songs) {\n    throw Error('SongQueue component must have props `songs`');\n  }\n\n  const onVoteHandler = (...args) => onVote(...args);\n\n  if (!songs.length) {\n    return <>\n      <Card>\n        <Card.Title><FiMusic/> No songs added yet</Card.Title>\n      </Card>\n    </>\n  }\n  return <>\n    <Card>\n      <Card.Text>\n        {songs.map(s => <SongQueueListItem votes={s.votes} track={s.track} onVote={onVoteHandler}/>)}\n      </Card.Text>\n    </Card>\n  </>\n}\n","import {Accordion} from \"react-bootstrap\";\nimport {BASE_URI} from \"../constants\";\n\n\nexport default function QuarrySharing(props) {\n  const { phrase } = props;\n\n  return (<Accordion defaultActiveKey=\"0\">\n    <Accordion.Item eventKey=\"0\">\n      <Accordion.Header>Bring your friends here 🙋‍♀️</Accordion.Header>\n      <Accordion.Body>\n        Tell them to enter <code>\"{phrase.replace('-', ' ')}\" </code>\n        on {BASE_URI}. They can also go to <a href={`${BASE_URI}/${phrase}`}>{`${BASE_URI}/${phrase}`}</a> directly.\n      </Accordion.Body>\n    </Accordion.Item>\n  </Accordion>);\n}\n","import spotify from \"../../externalApis/spotify\";\n\nlet playerCheckId;\n\nexport const getLastTrackPlayed = async() => {\n  const recentlyPlayed = await spotify.request('/me/player/recently-played', {\n    params: {\n      'limit': 1\n    }});\n  return recentlyPlayed.data.items[0]?.track;\n}\n\nexport const checkPlayerForTrackEnd = async (onEnd, onResume, trackUri) => {\n  const playerState = await spotify.request('/me/player');\n  const recentlyPlayed  = await getLastTrackPlayed();\n  const lastPlayed = recentlyPlayed.uri;\n  console.log('LAST PLAYED IS ', lastPlayed);\n  console.log('PLAYER STATE ', playerState.data);\n  if (!playerState.data.is_playing) {\n    console.log('🚨 Nothing playing! Calling', onEnd.toString());\n    clearInterval(playerCheckId);\n    playerCheckId = null;\n    onEnd();\n    return;\n  }\n  console.log('STATE', playerState);\n}\n\nexport const startPlayerCheckLoop = (onEnd) => {\n  console.log('starting player check loop');\n  if (playerCheckId) {\n    return;\n  }\n  playerCheckId = setInterval(() => checkPlayerForTrackEnd(onEnd), 7200);\n}\nexport const stopPlayerCheckLoop = () => {\n  clearInterval(playerCheckId);\n  playerCheckId = null;\n}\n","import {Modal, Button, Badge} from \"react-bootstrap\";\nimport {FaTicketAlt} from 'react-icons/fa';\nimport {MONEY_SINGULAR} from '../constants'\nimport TrackPreview from \"./TrackPreview\";\n\nexport default function ConfirmSongSelection({show, track, handler}) {\n  if (track === null) {\n    return null;\n  }\n  return <Modal show={show}>\n    <Modal.Header>\n      <Modal.Title>Nominating Song</Modal.Title>\n    </Modal.Header>\n    <Modal.Body>Do you want to spend <b>1 {MONEY_SINGULAR}</b> to nominate this song?\n      <br/>\n      <TrackPreview track={track}/>\n    </Modal.Body>\n    <Modal.Footer>\n      <Button variant=\"outline-secondary\" onClick={() => handler(false)}>\n        Close\n      </Button>\n      <Button variant=\"dark\" onClick={() => handler(true)}>\n        Submit&nbsp; <Badge bg='primary' pill>-1 <FaTicketAlt/></Badge>\n      </Button>\n    </Modal.Footer>\n  </Modal>\n}\n","import spotify from '../externalApis/spotify';\nimport {IoFlameSharp} from 'react-icons/io5';\nimport useUser from '../auth/identity'\nimport User from '../models/User';\nimport Quarry from '../models/Quarry';\nimport {MONEY_PLURAL} from '../constants';\nimport {FormControl, InputGroup, Button, Badge, ListGroup} from \"react-bootstrap\";\nimport {useState} from \"react\";\nimport {Time} from 'goodtimer';\nimport ConfirmSongSelection from \"./ConfirmSongSelection\";\n\nexport default function SongSelector({soupId, eventHandler = () => {}} = {}) {\n\n  const [query, setQuery] = useState('');\n  const [tracks, setTracks] = useState([]);\n  const [showConfirm, setShowConfirm] = useState(false);\n  const [selectedTrack, setSelectedTrack] = useState(null);\n  const [submittingSong, setSubmittingSong] = useState(false);\n  const user = useUser();\n\n  function doSearch() {\n    spotify.request('/search', {\n      params: {\n        q: query,\n        type: 'track',\n        limit: 6\n      }\n    })\n      .then(res => {\n        console.log(res);\n        if (!res) {\n          return;\n        }\n        setTracks(res.data.tracks.items)\n      })\n  }\n\n  function handleSelected(selectedTrack) {\n    setSelectedTrack(selectedTrack);\n    setShowConfirm(true);\n  }\n\n  function handleConfirmation(isConfirmed) {\n    setShowConfirm(false);\n    if (isConfirmed && !submittingSong) {\n      setSubmittingSong(true);\n\n      User.findById(user)\n        .then(userDoc => {\n          if (userDoc.money < 1) {\n            alert(`You're too broke! Wait a few minutes for your ${MONEY_PLURAL} to be replenished.`);\n            throw Error('Silent');\n          }\n          const updatedMoney = userDoc.money - 1;\n          return User.update({_id: user}, {money: updatedMoney})\n            .then(user => {\n              eventHandler('updateUser');\n              eventHandler('selectedTrack', selectedTrack);\n              return user;\n            })\n        })\n        .then(() => Quarry.findById(soupId))\n        .then(soup => {\n          const updateQueue = [{votes: 5, track: selectedTrack}, ...soup.queue];\n          eventHandler('updateQueue', updateQueue);\n          return Quarry.update({_id: soup._id}, {queue: updateQueue})\n        })\n        .catch(e => {\n          if (e.message.toLowerCase() === 'silent') {\n            return e;\n          }\n          throw e;\n        })\n        .finally(() => {\n          setSubmittingSong(false);\n        })\n\n      if (user.money < 1) {\n        console.log('no money!');\n        return;\n      }\n    }\n  }\n\n  function renderTrack(track, key) {\n    const time = new Time(track.duration_ms);\n    // TODO TrackPreview.jsx should have a variant that renders this\n    return <ListGroup.Item\n      className=\"d-flex justify-content-between align-items-start\"\n      key={key}\n      action\n      onClick={() => handleSelected(track)}\n    >\n      <div>\n        <div className=\"fw-bold\">{track.name}&nbsp;\n          {track.explicit && <Badge bg='secondary'>Explicit</Badge>}&nbsp;\n          {track.popularity > 75 && <IoFlameSharp size='1.3em' style={{color: '#ff8c00'}}/>}\n          {track.popularity > 83 && <IoFlameSharp size='1.3em' style={{color: '#ff8c00'}}/>}\n          {track.popularity > 92 && <IoFlameSharp size='1.3em' style={{color: '#ff8c00'}}/>}\n        </div>\n        <div>{track.artists.map(a => a.name).join(', ')}</div>\n      </div>\n      <div style={{fontFamily: 'monospace'}}>{time.toString('s')}</div>\n    </ListGroup.Item>\n  }\n\n  return <>\n    <InputGroup>\n      <FormControl\n        placeholder=\"Type to search...\"\n        value={query}\n        onChange={(event) => setQuery(event.target.value)}\n      />\n    </InputGroup>\n    <Button onClick={doSearch}>Search</Button>\n    <br/>\n    <ListGroup>\n      {tracks.map(renderTrack)}\n    </ListGroup>\n    <ConfirmSongSelection show={showConfirm} track={selectedTrack} handler={handleConfirmation}/>\n  </>\n}\n","import React from 'react';\nimport Loading from \"../Loading\";\nimport { SpotifyPlayerContext } from \"../../contexts/SpotifyPlayerContext\";\nimport TrackPreview from \"../TrackPreview\";\nimport spotify from \"../../externalApis/spotify\";\nimport Quarry from '../../models/Quarry';\n\nimport {\n  checkPlayerForTrackEnd,\n  startPlayerCheckLoop,\n  getLastTrackPlayed\n  } from './playerStateCheck';\n\nexport const TRACK_END = 'TRACK_END';\nexport const ERROR_PLAY_FAILED = 'ERROR_PLAY_FAILED';\n\n\nasync function _requestSpotifyPlayTrack(uri) {\n  return spotify.request('/me/player/play', {\n    method: 'put',\n    data: {\n      uris: [uri]\n    }\n  });\n}\n\nasync function playTrack(uri, {offsetMs = 0, currentUri } = {}) {\n  console.group('playTrack');\n  const playerState = await spotify.request('/me/player');\n  console.log({playerState});\n  if (playerState.status === 204) {\n    const lastTrack = await getLastTrackPlayed();\n    if (lastTrack.uri !== uri) {\n      console.log('▶️ Playing current track as its not the last track played already');\n      return _requestSpotifyPlayTrack(uri);\n    }\n  }\n  if (playerState.data.item.uri === uri) {\n    console.log('song is playing right now, will not re-play', playerState.data);\n    console.groupEnd();\n    return;\n  }\n  console.log('🌐 Making request to Spotify to play track');\n  const res = await _requestSpotifyPlayTrack(uri);\n  console.log('🎵🎵 Response from play request', res);\n  console.groupEnd();\n}\n\nexport default function Player({ eventHandler, soupId }) {\n\n  if (!soupId) {\n    return <Loading />;\n  }\n\n  const updateConnectedSoup = async (updateObj) =>\n    Quarry.update({_id: soupId}, updateObj);\n\n\n  const onValueChange = (values) => {\n    if (values === null) {\n      return <div>Talking to Spotify..</div>\n    }\n    console.group('Player:onValueChange');\n\n    const { isPlaying, track, startFrom, updateSpotify } = values;\n    console.log('new values', {isPlaying, track, startFrom, updateSpotify});\n\n    if (isPlaying) {\n      if (track) {\n        console.log('sending to playTrack with uri ', track.uri);\n        playTrack(track.uri)\n          .catch(e => {\n            eventHandler(ERROR_PLAY_FAILED, e);\n          })\n          .then(() => {\n            startPlayerCheckLoop(() => eventHandler(TRACK_END));\n            setTimeout(() =>\n              checkPlayerForTrackEnd(() => eventHandler(TRACK_END)), track.duration_ms - 800);\n            return updateConnectedSoup({\n              isPlaying: true,\n              duration: track.duration_ms,\n              startedAt: new Date()\n            });\n          })\n        console.groupEnd();\n        return <TrackPreview track={track} />\n      }\n      console.log('there is no track, so send TRACK_END event');\n      console.groupEnd();\n      eventHandler(TRACK_END);\n      return <div>Getting next song...</div>\n    }\n    // todo PAUSE\n    return <div>paused</div>\n  }\n\n  return <SpotifyPlayerContext.Consumer>\n    {onValueChange}\n  </SpotifyPlayerContext.Consumer>\n}\n","import Player from './Player';\nexport default Player;\n\nexport * from './Player';\n","import {AiOutlinePlusCircle} from 'react-icons/ai';\nimport {FaMusic, FaTicketAlt, FaPlay} from 'react-icons/fa'\nimport {useState, useEffect} from 'react';\nimport {SpotifyPlayerContext} from \"../contexts/SpotifyPlayerContext\";\nimport {useParams} from 'react-router-dom';\nimport find from 'lodash.find';\nimport sortBy from 'lodash.sortby';\nimport {startMoneyLoop, stopMoneyLoop} from '../routines/moneyReplenish';\nimport Loading from \"../components/Loading\";\nimport QuarryModel from '../models/Quarry';\nimport {MobilishView} from \"../components/MobilishView\";\nimport SongQueue from \"../components/SongQueue\";\nimport {Tabs, Tab, Button, OverlayTrigger, Tooltip} from \"react-bootstrap\";\nimport QuarrySharing from \"../components/QuarrySharing\";\nimport SongSelector from \"../components/SongSelector\";\nimport Player from \"../components/Player\";\nimport User from \"../models/User\";\nimport useUser from \"../auth/identity\";\n\nimport './Soup.css';\n\nexport default function Soup() {\n  const {id: quarryId} = useParams();\n\n  const [quarry, setQuarry] = useState(null);\n  const [errorCode, setErrorCode] = useState(null);\n  const [updating, setUpdating] = useState(false);\n  const [user, setUser] = useState(null);\n  const [playerValues, setPlayerValues] = useState(null);\n  const [playerLock, setPlayerLock] = useState(false);\n  const [selectedTab, setSelectedTab] = useState('songs')\n  const myId = useUser();\n\n  useEffect(() => {\n    if (quarry !== null) {\n      return;\n    }\n\n    User.findById(myId)\n      .then((user) => setUser(user, [quarry, myId, quarryId]));\n\n    QuarryModel.findById(quarryId)\n      .then(soup => {\n        if (!soup) {\n          console.log('setting error');\n          return setErrorCode(404);\n        }\n        setQuarry(soup);\n        setPlayerValues({\n          isPlaying: soup.isPlaying,\n          track: soup.currentTrack,\n          updateSpotify: true\n        });\n        if (!soup.queue.length) {\n          setSelectedTab('new');\n        }\n        startMoneyLoop();\n      });\n\n    return stopMoneyLoop;\n  });\n\n  const sortQueue = (queue) => sortBy(quarry.queue, 'votes').reverse();\n\n  const songSelectorEvent = (event, data) => {\n    if (updating) {\n      return;\n    }\n    if (event === 'updateUser') {\n      User.findById(myId)\n        .then((user) => setUser(user, [quarry, myId, quarryId]));\n    } else if (event === 'updateQueue') {\n      console.log('updating main queue data', data);\n      setQuarry({...quarry, ...{queue: data}});\n      setSelectedTab('songs');\n    } else if (['up', 'down'].includes(event)) {\n      setUpdating(true);\n      const songToUpdate = find(quarry.queue, (o) => o.track.id === data.track.id);\n      songToUpdate.votes += event === 'up' ? 1 : -1;\n      quarry.queue = sortQueue(quarry.queue);\n      QuarryModel.update({_id: quarry._id}, {queue: quarry.queue})\n        .then(() => setQuarry(quarry))\n        .finally(() => setUpdating(false));\n    }\n  }\n\n  const handlePlayPauseButton = () => {\n    const isPlaying = !playerValues.isPlaying;\n    setPlayerValues({...playerValues, isPlaying, updateSpotify: true});\n    QuarryModel.update({_id: quarry._id}, {isPlaying})\n      .catch(console.error);\n  }\n\n  const onPlayerEvent = (event) => {\n    console.log('# player event #');\n\n    if (event === 'TRACK_END') {\n      if (playerLock) {\n        console.info('player locked');\n        return;\n      }\n      setPlayerLock(true);\n      console.group('onPlayerEvent:TRACK_END')\n      console.log('getting next track');\n      const nextTrack = quarry.queue.pop()?.track;\n      console.log('next track is ', nextTrack);\n      if (!nextTrack) {\n        // TODO message display\n        console.info('no next track, pausing');\n        setPlayerValues({...playerValues, isPlaying: false, updateSpotify: true});\n        setPlayerLock(false);\n        QuarryModel.update({_id: quarry._id}, {isPlaying: false})\n          .catch(console.error);\n        console.groupEnd();\n        return;\n      }\n      console.log('SOUP; updating with next track', nextTrack);\n      QuarryModel.update({_id: quarry._id}, {\n        queue: quarry.queue,\n        currentTrack: nextTrack,\n        startedAt: new Date(),\n        isPlaying: playerValues.isPlaying\n      })\n        .then(() => setQuarry(quarry))\n        .then(() => {\n          console.log('setting player values');\n          setPlayerValues({...playerValues, track: nextTrack, startAt: 0});\n        })\n        .catch((e) => {\n          alert(e);\n          setPlayerValues({...playerValues, isPlaying: false});\n        })\n        .finally(() => {\n          console.groupEnd();\n          setPlayerLock(false);\n        })\n    }\n  };\n\n  if (errorCode) {\n    console.log(errorCode);\n    if (errorCode === 404) {\n      return (<MobilishView>\n        <h1>Quarry not found <code>404</code></h1>\n        <p>It might have been deleted. Or we might've screwed up (probs not tbh)</p>\n        <p><a href='/'>Back to the pantry</a></p>\n      </MobilishView>);\n    }\n    return (<MobilishView>\n      <h1>Uh oh</h1>\n      <p>Don't look at me.</p>\n      <p><a href='/'>Just go away</a></p>\n    </MobilishView>)\n  }\n  if (quarry === null) {\n    return <Loading/>\n  }\n  const userMoneyStat = <><FaTicketAlt/> {user?.money}</>;\n\n  const startButtonDisabled = !quarry.queue.length && !quarry.currentTrack;\n\n  return <SpotifyPlayerContext.Provider value={playerValues}>\n    <MobilishView align='left'>\n      <section>\n        <span className='header'>\n          <h2>{quarry.name} </h2>\n          <OverlayTrigger\n            placement='bottom'\n            delay={150}\n            overlay={(props) => <Tooltip {...props} >Add a song first</Tooltip>}\n          >\n            <Button variant='success' disabled={startButtonDisabled} onClick={handlePlayPauseButton}><FaPlay/></Button>\n          </OverlayTrigger>\n        </span>\n        <h4>{typeof user?.money === 'number' ? userMoneyStat : ' '}</h4>\n      </section>\n      <QuarrySharing phrase={quarry.phrase}/>\n      <br/>\n      <Player eventHandler={onPlayerEvent} soupId={quarry?._id}/>\n      <Tabs activeKey={selectedTab} onSelect={setSelectedTab} className=\"mb-3\">\n        <Tab eventKey=\"songs\" title={<><FaMusic/> Songs</>}>\n          <SongQueue songs={quarry.queue} onVote={songSelectorEvent}/>\n        </Tab>\n        <Tab eventKey=\"new\" title={<><AiOutlinePlusCircle/> New </>}>\n          <SongSelector eventHandler={songSelectorEvent} soupId={quarryId}/>\n        </Tab>\n      </Tabs>\n    </MobilishView>\n  </SpotifyPlayerContext.Provider>\n}\n","import {Routes, Route } from \"react-router-dom\";\nimport './App.css';\nimport {initializeApp} from \"firebase/app\";\n\nimport SelectAQuarry from \"./views/SelectAQuarry\";\nimport NewQuarry from \"./views/NewQuarry\";\nimport ConnectSpotify from \"./views/ConnectSpotify\";\nimport QuarryFromUrl from \"./views/QuarryFromUrl\";\nimport Soup from \"./views/Soup\";\n\nconst style = {\n  'display': 'flex',\n  justifyContent: 'center'\n}\n\nfunction App() {\n\n    const appConfig = {\n      apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n      authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n      projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n      storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n      messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n      appId: process.env.REACT_APP_FIREBASE_APP_ID\n    };\n    initializeApp(appConfig);\n\n\n  return (\n    <div className=\"App\" style={style}>\n      <Routes>\n        <Route path=\"/\" element={<SelectAQuarry/>}/>\n        <Route path=\"/spotifyConnect\" element={<ConnectSpotify/>}/>\n        <Route path=\"/callback\" element={<ConnectSpotify/>}/>\n        <Route path=\"/soup/new\" element={<NewQuarry/>}/>\n        <Route path=\"/soup/:id\" element={<Soup/>}/>\n        <Route path=\"/:phrase\" element={<QuarryFromUrl/>}/>\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport getDatabase from \"./database/getDatabase\";\nimport {connectFirestoreEmulator} from \"firebase/firestore\";\nimport {initializeApp} from \"firebase/app\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst appConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APP_ID\n}\nconsole.log('Initializing Firebase app with config', appConfig)\n\nconst app = initializeApp(appConfig);\nconst db = getDatabase(app);\n\nif (process.env.NODE_ENV === 'production') {\n  // TODO prod connection\n} else {\n  console.log('🔧 connecting firestore emulator for development');\n  connectFirestoreEmulator(db, 'localhost', 8080);\n  // setTasks([..tasks.slice(0, 1), true, ...tasks.slice(2)]);\n}\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}